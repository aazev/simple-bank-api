name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  continuous-integration:
    name: Check syntax, test and build
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: chetan/git-restore-mtime-action@v1
        if: ${{ inputs.restore_mtime }}

      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Run cargo clippy
        run: cargo clippy -- -D warnings
        env:
          CARGO_HOME: ~/.cargo

      - name: Run cargo test
        run: cargo test
        env:
          CARGO_HOME: ~/.cargo

      - name: Run cargo release build
        run: cargo build --release
        env:
          CARGO_HOME: ~/.cargo
          RUSTFLAGS: "-Ctarget-cpu=native"

